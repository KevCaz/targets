intro
motivation
pipeline-tools
the-targets-package
about-this-manual
what-about-drake
walkthrough
about-this-example
file-structure
target-script-file
inspect-the-pipeline
run-the-pipeline
changes
change-code
change-data
read-metadata
debugging
error-messages
environment-browser
the-debug-option
workspaces
tradeoffs
performance
monitoring-the-pipeline
performance-1
functions
problems-with-script-based-workflows
functions-1
writing-functions
functions-in-pipelines
tracking-changes
targets
target-names
what-a-target-should-do
how-much-a-target-should-do
working-with-tools-outside-r
side-effects
dependencies
return-value
saving
hashing
workaround
packages
loading-and-configuring-r-packages
r-packages-as-projects
target-factories
package-based-invalidation
projects
extra-reproducibility
project-files
multiple-projects
create-each-project.
configure-each-project.
run-each-project
interdependent-projects
config-inheritance
sharing-targets
the-config-package
data
local-data-store
external-files
memory
cloud-storage
cost
aws-setup
gcp-setup
usage
data-version-control
cleaning-up-local-internal-data-files
literate-programming
literate-programming-within-a-target
r-markdown-targets
quarto-targets
parameterized-documents
single-parameter-set
multiple-parameter-sets
target-markdown
access
purpose
example
required-packages
setup
globals
target-definitions
pipeline
output
conditioning-on-interactive-mode
tar_interactive
tar_toggle
chunk-options
dynamic
branching
about-dynamic-branching
example-1
provenance
patterns
iteration
branching-over-row-groups
branching-over-files
performance-and-batching
static
branching-1
when-to-use-static-branching
map
dynamic-within-static-branching
combine
metaprogramming
hooks
hpc
clustermq
persistent-workers
clustermq-installation
clustermq-local-configuration
clustermq-remote-configuration
clustermq-template-file-configuration
future
transient-workers
future-installation
future-locally
future-remotely
future-configuration
advanced
cloud-computing
drake
why-is-drake-superseded
transitioning-to-targets
advantages-of-targets-over-drake
better-guardrails-by-design
enhanced-debugging-support
improved-tracking-of-package-functions
lighter-friendlier-data-management
cloud-storage-1
show-status-of-functions-and-global-objects
dynamic-branching-with-dplyrgroup_by
composable-dynamic-branching
improved-parallel-efficiency
metaprogramming-1
markdown
