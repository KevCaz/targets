intro
motivation
pipeline-toolkits
the-targets-package
about-this-manual
what-about-drake
walkthrough
about-this-minimal-example
file-structure
inspect-the-pipeline
run-the-pipeline
changes
change-code
change-data
read-your-data
read-metadata
debugging
workspaces
interactive-debugging
functions
problems-with-script-based-workflows
functions-1
writing-functions
functions-in-pipelines
practices
how-to-define-good-targets
dependencies
workflows-as-r-packages
working-with-tools-outside-r
monitoring-the-pipeline
performance
cleaning-up
files
internal-files
external-input-files
external-output-files
literate-programming
parameterized-r-markdown
single-parameter-set
multiple-parameter-sets
dynamic
branching
abort-dynamic-branching
patterns
pattern-construction
branch-provenance
testing-patterns
dynamic-branching-over-files
iteration
vector-iteration
list-iteration
group-iteration
batching
static
branching-1
when-to-use-static-branching
map
dynamic-within-static-branching
combine
metaprogramming
hpc
clustermq
clustermq-installation
clustermq-locally
clustermq-remotely
clustermq-configuration
future
future-installation
future-locally
future-remotely
future-configuration
advanced
cloud
compute
storage
get-started-with-the-amazon-s3-web-console
configure-your-local-machine
create-s3-buckets
configure-the-pipeline
run-the-pipeline-1
manage-the-data
drake
transitioning-to-targets
advantages-of-targets-over-drake
better-guardrails-by-design
enhanced-debugging-support
improved-tracking-of-package-functions
lighter-friendlier-data-management
cloud-storage
show-status-of-functions-and-global-objects
dynamic-branching-with-dplyrgroup_by
composable-dynamic-branching
improved-parallel-efficiency
metaprogramming-1
